[
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "0",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ", ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column 0 by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "0 1",
    "expression": "value.replace(\"{\\'url\\':\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 0 1 using expression value.replace(\"{\\'url\\':\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "1",
    "expression": "value.replace(\"{\\'url\\': None, \\'text\\': \\'(\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 1 using expression value.replace(\"{\\'url\\': None, \\'text\\': \\'(\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "1",
    "expression": "value.replace(\"{\\'url\\': None, \\'text\\': \\'\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 1 using expression value.replace(\"{\\'url\\': None, \\'text\\': \\'\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "0 2",
    "expression": "value.replace(\"\\'text\\': \\'\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 0 2 using expression value.replace(\"\\'text\\': \\'\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "0 1",
    "expression": "value.replace(\"\\'\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 0 1 using expression value.replace(\"\\'\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "0 2",
    "expression": "value.replace(\"\\'}\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 0 2 using expression value.replace(\"\\'}\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "1",
    "expression": "value.replace(\"\\'}\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column 1 using expression value.replace(\"\\'}\",\" \")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "0 1",
    "newColumnName": "URL",
    "description": "Rename column 0 1 to URL"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "0 2",
    "newColumnName": "Name",
    "description": "Rename column 0 2 to Name"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "1",
    "newColumnName": "Credit",
    "description": "Rename column 1 to Credit"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Credit",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "(",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Credit by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Credit 2",
    "expression": "value.replace(\")\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Credit 2 using expression value.replace(\")\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Credit 3",
    "expression": "value.replace(\")\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Credit 3 using expression value.replace(\")\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Credit 1",
    "expression": "value.replace(\")\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Credit 1 using expression value.replace(\")\",\"\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Credit 1",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ":",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Credit 1 by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Credit 1 1",
    "newColumnName": "Credit",
    "description": "Rename column Credit 1 1 to Credit"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Credit 1 2",
    "newColumnName": "Note",
    "description": "Rename column Credit 1 2 to Note"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Note",
    "expression": "join ([coalesce(cells['Note'].value,''),coalesce(cells['Credit 1 3'].value,''),coalesce(cells['Credit 2'].value,''),coalesce(cells['Credit 3'].value,''),coalesce(cells['Credit 4'].value,'')],'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Note using expression join ([coalesce(cells['Note'].value,''),coalesce(cells['Credit 1 3'].value,''),coalesce(cells['Credit 2'].value,''),coalesce(cells['Credit 3'].value,''),coalesce(cells['Credit 4'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "URL",
      "Name",
      "Credit",
      "Note"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-move",
    "columnName": "Name",
    "index": 0,
    "description": "Move column Name to position 0"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Name",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Department",
    "columnInsertIndex": 1,
    "description": "Create column Department at index 1 based on column Name using expression grel:value"
  }
]
